{
	"info": {
		"_postman_id": "c0ac41b3-b403-4466-952f-0468f7fa71a5",
		"name": "unit-tests-api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Register and Authenticate",
			"item": [
				{
					"name": "/register Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"postman.clearEnvironmentVariable(\"access_token\");\r",
									"\r",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"tests[\"User created successfully\"] = jsonData.message === \"User created successfully\";\r",
									"tests[\"User already exists\"] = jsonData.message === \"This username already exists\";\r",
									"\r",
									"tests[\"Content-Type is present in response\"] = postman.getResponseHeader('Content-Type');\r",
									"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader('Content-Type') === 'application/json';"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "{{content_type}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"test3\",\r\n    \"password\": \"1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);\r",
									"\r",
									"tests['Status code is 200'] = responseCode.code === 200;\r",
									"tests['Body contains access_token'] = responseBody.has('access_token');\r",
									"tests['Response time is less than 150ms'] = responseTime < 150;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "{{content_type}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"test\",\r\n    \"password\": \"1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth?username=test&password=1234",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							],
							"query": [
								{
									"key": "username",
									"value": "test"
								},
								{
									"key": "password",
									"value": "1234"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User create store and item",
			"item": [
				{
					"name": "/register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"postman.clearEnvironmentVariable(\"access_token\");\r",
									"\r",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"tests[\"User created successfully\"] = jsonData.message === \"User created successfully\";\r",
									"tests[\"User already exists\"] = jsonData.message === \"This username already exists\";\r",
									"\r",
									"tests[\"Content-Type is present in response\"] = postman.getResponseHeader('Content-Type');\r",
									"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader('Content-Type') === 'application/json';"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "{{content_type}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"test3\",\r\n    \"password\": \"1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);\r",
									"\r",
									"tests['Status code is 200'] = responseCode.code === 200;\r",
									"tests['Body contains access_token'] = responseBody.has('access_token');\r",
									"tests['Response time is less than 150ms'] = responseTime < 150;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "{{content_type}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"test\",\r\n    \"password\": \"1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth?username=test&password=1234",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							],
							"query": [
								{
									"key": "username",
									"value": "test"
								},
								{
									"key": "password",
									"value": "1234"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/item/my_item",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/item/my_item",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"my_item"
							]
						}
					},
					"response": []
				},
				{
					"name": "/item/test",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{auth}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "data = {\r\n    'price': 19.99,\r\n    'store_id': 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/item/test",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"test"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}